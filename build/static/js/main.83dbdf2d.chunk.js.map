{"version":3,"sources":["app/Navbar.js","features/posts/TimeAgo.js","features/posts/MissionSlice.js","features/posts/MissionList.js","features/posts/AddMissionForm.js","features/posts/EditMissionForm.js","features/posts/SingleMissionPage.js","features/posts/Login.js","features/posts/Register.js","App.js","features/users/usersSlice.js","app/store.js","index.js"],"names":["Navbar","className","to","onClick","localStorage","setItem","TimeAgo","timestamp","timeAgo","date","parseISO","timePeriod","formatDistanceToNow","title","payload","a","console","log","fetch","method","headers","body","JSON","stringify","id","content","user","username","response","ok","json","jsonResponse","js","Error","missionsSlice","createSlice","name","initialState","reducers","missionAdded","reducer","state","action","sendmission","push","prepare","userId","nanoid","Date","toISOString","submissions","missionUpdated","existingPost","find","post","deleteMission","index","indexOf","splice","addSubMission","subs","missionId","addmission","mission","sub","slice","deleteSubMission","parseInt","actions","CHANGE","FILTER","FILTERON","withStyles","root","color","green","props","Checkbox","renderedMissions","MissionsList","useDispatch","useState","update","SetUpdate","updatedelete","SetUpdateDelete","missarr","missions1","Setmiss","React","checkedG","search","SetSearch","getmission","getItem","role","auth","deletemission","event","target","msg","missions","useSelector","useEffect","map","key","substring","inputProps","orderedMissions","sort","b","localeCompare","filterMissions","filter","type","placeholder","value","onChange","e","onKeyPress","which","AddMissionForm","setTitle","setContent","setUserId","dispatch","users","hour","getHours","alert","gethour","canSave","Boolean","htmlFor","disabled","RESPONSE","EditPostForm","match","params","missionget","mission1","SetMission","SetChange","result","updateMission","history","useHistory","onSavePostClicked","COUNT","SinglePostPage","submission","SetSubMission","submissionsarray","ids","SetSubMissions","SetMIssion","deletestatus","UpdateDelete","getsubmissions","sendSubMission","itemid","item","deletesubmission","deleteid","renderSubMissions","submis","i","deletesub","addsubmission","undefined","CryptoJS","require","dotenv","Login","SetUserName","password","SetPassword","show","setShow","SendRequest","config","process","AES","encrypt","toString","authenticated","onLoadSend","required","minLength","style","Register","fail","Setfail","success","setSuccess","App","exact","path","component","render","Fragment","usersSlice","configureStore","missionsReducer","usersReducer","ReactDOM","StrictMode","store","document","getElementById"],"mappings":"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","file":"static/js/main.83dbdf2d.chunk.js","sourcesContent":["import React from 'react'\n\nimport { Link } from 'react-router-dom'\n\nexport const Navbar = () => {\n  const logout=()=>{\n    localStorage.setItem('username','');\n    localStorage.setItem('password','');\n    localStorage.setItem('authenticated','false');\n    localStorage.setItem('role','');\n  }\n  return (\n    <nav>\n      <section>\n        <h1>To Do List</h1>\n\n        <div className=\"navContent\">\n          <div className=\"navLinks\">\n            <Link to=\"/missions\">Missions</Link>\n            <Link to=\"/login\" onClick={logout}>Logout</Link>\n          </div>\n        </div>\n      </section>\n    </nav>\n  )\n}\n","import React from 'react'\nimport { parseISO, formatDistanceToNow } from 'date-fns'\n\nexport const TimeAgo = ({ timestamp }) => {\n  let timeAgo = ''\n  if (timestamp) {\n    const date = parseISO(timestamp)\n    const timePeriod = formatDistanceToNow(date)\n    timeAgo = `${timePeriod} ago`\n  }\n\n  return (\n    <span title={timestamp}>\n      &nbsp; <i>{timeAgo}</i>\n    </span>\n  )\n}\n","import { createSlice, nanoid } from '@reduxjs/toolkit'\nimport { sub } from 'date-fns'\n\nconst initialState = [\n  \n];\nlet COUNT =0;\nasync function sendmission(payload){\n  console.log(payload.date);\n  try{\n    const response = await fetch('http://localhost:4002/addmission',{\n      method:'POST',\n      headers: {\n        'Content-Type': 'application/json'\n    },\n      body:JSON.stringify({id:payload.id,date:payload.date,title:payload.title,content:payload.content,user:payload.username})\n    });\n    if(response.ok){\n      const jsonResponse = await response.json();\n      console.log(jsonResponse.js);\n    }else{\n    throw new Error('request failed');\n  }\n  }catch(error){\n    console.log(error);\n  }\n}\n\nconst missionsSlice = createSlice({\n  name: 'missions',\n  initialState,\n  reducers: {\n    missionAdded: {\n        reducer(state, action) {\n        sendmission(action.payload);\n        state.push(action.payload);\n        console.log(state);\n      },\n       prepare(title, content, userId) {\n        return {\n          payload: {\n            id: nanoid(),\n            date: new Date().toISOString(),\n            title:title,\n            content:content,\n            username: userId,\n            submissions:['1','2']\n          },\n        }\n      },\n    },\n    \n    missionUpdated(state, action) {\n      const { id, title, content } = action.payload\n      const existingPost = state.find((post) => post.id === id)\n      if (existingPost) {\n        existingPost.title = title\n        existingPost.content = content\n      }\n    },\n    deleteMission(state,action){\n      const {id} = action.payload;\n      console.log(state);\n      console.log(id);\n      const index = state.indexOf((post) => post.id === id)\n      state.splice(index,1);\n      \n    },\n    addSubMission(state,action){\n      const{ subs,missionId } = action.payload;\n      console.log(subs);\n      const addmission = state.find((mission) =>mission.id === missionId);\n      const sub = addmission.submissions.slice();\n      sub.push(subs);\n      console.log(sub);\n      addmission.submissions = sub;\n    },\n    deleteSubMission(state,action){\n      const{ subs,missionId,id} = action.payload;\n      console.log(subs);\n      const addmission = state.find((mission) =>mission.id === missionId);\n      const sub = addmission.submissions.slice();\n      sub.splice(parseInt(id),1);\n      addmission.submissions = sub;\n    },\n  },\n})\n\nexport const { missionAdded, missionUpdated ,deleteMission, addSubMission,deleteSubMission} = missionsSlice.actions\n\nexport default missionsSlice.reducer\n","import React, { useEffect, useState } from 'react';\nimport { useSelector,useDispatch } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { withStyles } from '@material-ui/core/styles';\nimport { green } from '@material-ui/core/colors';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport CheckBoxOutlineBlankIcon from '@material-ui/icons/CheckBoxOutlineBlank';\nimport CheckBoxIcon from '@material-ui/icons/CheckBox';\nimport Favorite from '@material-ui/icons/Favorite';\nimport FavoriteBorder from '@material-ui/icons/FavoriteBorder';\n\n\nimport { TimeAgo } from './TimeAgo'\nimport { deleteMission,missionAdded } from './MissionSlice'\nlet  CHANGE =0;\nlet FILTER =0;\nlet FILTERON = false;\nconst GreenCheckbox = withStyles({\n  root: {\n    color: green[400],\n    '&$checked': {\n      color: green[600],\n    },\n  }\n})((props) => <Checkbox color=\"default\" {...props} />);\nfunction CheckboxLabels() {\n  \n}\n\nlet renderedMissions =[];\nexport const MissionsList = () => {\n  const dispatch = useDispatch();\n  const[update,SetUpdate] = useState(0);\n  const[updatedelete,SetUpdateDelete] = useState(0);\n  const[missions1,Setmiss] = useState({missarr:[]});\n  const [state, setState] = React.useState({\n    checkedG: false,\n  });\n  const[search,SetSearch] = useState('');\n  const getmission = async() =>{\n    console.log(localStorage.getItem('role'));\n    try{\n      const response = await fetch('http://localhost:4002/getmissions',{\n        method:'POST',\n        headers: {\n          'Content-Type': 'application/json'\n      },\n      body:JSON.stringify({username:localStorage.getItem('username'),role:localStorage.getItem('role'),auth:localStorage.getItem('authenticated')})\n      });\n      if(response.ok){\n        const jsonResponse = await response.json();\n        console.log(jsonResponse.js);\n        Setmiss({missarr:jsonResponse.js});\n      }else{\n      throw new Error('request failed');\n    }\n    }catch(error){\n      console.log(error);\n    }\n  }\n  const deletemission = async (event) =>{\n    try{\n      const response = await fetch('http://localhost:4002/deletemission',{\n        method:'POST',\n        headers: {\n          'Content-Type': 'application/json'\n      },\n        body:JSON.stringify({id:event.target.id})\n      });\n      console.log(response.ok);\n      if(response.ok){\n        const jsonResponse = await response.json();\n        if(jsonResponse.msg==='deleted'){\n          CHANGE++;\n          SetUpdateDelete(CHANGE);\n          console.log(updatedelete);\n        } else{\n          console.log('failed');\n        }\n      }else{\n      throw new Error('request failed');\n    }\n    }catch(error){\n      console.log(error);\n    }\n  }\n  \n  const missions = useSelector((state) => state.missions)\n  useEffect(()=>{\n    getmission();\n  },[missions])\n\n  useEffect(()=>{\n    getmission();\n     renderedMissions = missions1.missarr.map((mission) => {\n      return (\n        <article className=\"post-excerpt\" key={mission.id}>\n          <h3>{mission.title}</h3>\n          <div>\n            <TimeAgo timestamp={mission.date} />\n          </div>\n          <p className=\"post-content\">{mission.content.substring(0, 100)}</p>\n  \n          <Link to={`/missions/${mission.id}`} className=\"button muted-button\">\n            View Post\n          </Link>\n          <button id={mission.id} onClick={deletemission}>Delete</button>\n          <Checkbox\n        color=\"primary\"\n        inputProps={{ 'aria-label': 'secondary checkbox' }}\n      />\n        </article>\n      )\n    })\n  },[updatedelete]);\n  // Sort posts in reverse chronological order by datetime string\n  const orderedMissions = missions1.missarr\n    .slice()\n    .sort((a, b) => b.date.localeCompare(a.date))\n  if(FILTERON === false){\n   renderedMissions = orderedMissions.map((mission) => {\n    return (\n      <article className=\"post-excerpt\" key={mission.id}>\n        <h3>{mission.title}</h3>\n        <div>\n          <p>User:{mission.username}</p>\n          <TimeAgo timestamp={mission.date} />\n        </div>\n        <p className=\"post-content\">{mission.content.substring(0, 100)}</p>\n\n        <Link to={`/missions/${mission.id}`} className=\"button muted-button\">\n          View Mission\n        </Link>\n        <button className=\"delbutton\" id={mission.id} onClick={deletemission}>Delete</button>\n        <Checkbox\n        color=\"primary\"\n        inputProps={{ 'aria-label': 'secondary checkbox' }}\n      />\n      </article>\n    );\n  })\n} else{\n  const filterMissions = orderedMissions.filter(mission => mission.title.indexOf(search) !==-1 || mission.content.indexOf(search) !==-1 || mission.username.indexOf(search) !==-1);\n  renderedMissions = filterMissions.map((mission) =>{\n    return (\n      <article className=\"post-excerpt\" key={mission.id}>\n        <h3>{mission.title}</h3>\n        <div>\n          <p>User:{mission.username}</p>\n          <TimeAgo timestamp={mission.date} />\n        </div>\n        <p className=\"post-content\">{mission.content.substring(0, 100)}</p>\n\n        <Link to={`/missions/${mission.id}`} className=\"button muted-button\">\n          View Mission\n        </Link>\n        <button className=\"delbutton\" id={mission.id} onClick={deletemission}>Delete</button>\n        <Checkbox\n        color=\"primary\"\n        inputProps={{ 'aria-label': 'secondary checkbox' }}\n      />\n      </article>\n    );\n  })\n}\nuseEffect(()=>{\n  const filterMissions = orderedMissions.filter(mission => mission.title.indexOf(search) !==-1 || mission.content.indexOf(search) !==-1 || mission.username.indexOf(search) !==-1);\n  renderedMissions = filterMissions.map((mission) =>{\n    return (\n      <article className=\"post-excerpt\" key={mission.id}>\n        <h3>{mission.title}</h3>\n        <div>\n          <p>User:{mission.username}</p>\n          <TimeAgo timestamp={mission.date} />\n        </div>\n        <p className=\"post-content\">{mission.content.substring(0, 100)}</p>\n\n        <Link to={`/missions/${mission.id}`} className=\"button muted-button\">\n          View Mission\n        </Link>\n        <button className=\"delbutton\" id={mission.id} onClick={deletemission}>Delete</button>\n        <Checkbox\n        color=\"primary\"\n        inputProps={{ 'aria-label': 'secondary checkbox' }}\n      />\n      </article>\n    );\n    \n  })\n},[update]);\n  const onUpdateSearch = (e) => SetSearch(e.target.value);\n  const searchMissions =(e) =>{\n    if(e.which === 13){\n      console.log('press');\n      const filterMissions = orderedMissions.filter(mission => mission.title.indexOf(search) !==-1 || mission.content.indexOf(search) !==-1|| mission.username.indexOf(search) !==-1);\n      console.log(filterMissions);\n      FILTER++;\n      FILTERON = true;\n      SetUpdate(FILTER);\n  }\n}\nconst Reset =() =>{\n  FILTERON = false;\n  FILTER++;\n  SetUpdateDelete(FILTER);\n  SetSearch('');\n}\n  return (\n    <section className=\"posts-list\">\n      <h2>Missions</h2>\n      <div className=\"search\">\n      <input\n          type=\"text\"\n          id=\"search\"\n          name=\"search\"\n          placeholder=\"filter missions by title and content\"\n          value={search}\n          onChange={onUpdateSearch}\n          onKeyPress={searchMissions}\n        />\n        <button type=\"button\" onClick={Reset}>Reset</button>\n        </div>\n      {renderedMissions}\n    </section>\n  )\n}\n","import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { missionAdded } from './MissionSlice';\nfunction gethour(){\n  const date = new Date();\n  const hour = date.getHours();\n  console.log(hour);\n  if(hour<13){\n    alert(\"בוקר טוב\");\n    console.log('dadada')\n  } else if(hour>=13 && hour<=17){\n    alert('צהריים טובים');\n  }else{\n    alert('ערב טוב');\n  }\n}\n\n\nexport const AddMissionForm = () => {\n  const [title, setTitle] = useState('');\n  const [content, setContent] = useState('');\n  const [userId, setUserId] = useState('');\n\n  const dispatch = useDispatch()\n  const users = useSelector((state) => state.users);\n\n  const onTitleChanged = (e) => setTitle(e.target.value);\n  const onContentChanged = (e) => setContent(e.target.value);\n  const onAuthorChanged = (e) => setUserId(e.target.value);\n  useEffect(()=>{\n    gethour();\n  },[])\n  const onSaveMissionClicked = () => {\n    if (title && content) {\n      dispatch(missionAdded(title, content, localStorage.getItem('username')));\n      console.log('hi');\n      setTitle('');\n      setContent('');\n      setUserId('');\n    }\n  }\n\n  const canSave = Boolean(title) && Boolean(content);\n  \n  return (\n    <section>\n      <h2>Add a new Mission</h2>\n      <form>\n        <label htmlFor=\"postTitle\">Mission Title:</label>\n        <input\n          type=\"text\"\n          id=\"postTitle\"\n          name=\"postTitle\"\n          placeholder=\"\"\n          value={title}\n          onChange={onTitleChanged}\n        />\n        \n        <label htmlFor=\"postContent\">Content:</label>\n        <textarea\n          id=\"postContent\"\n          name=\"postContent\"\n          value={content}\n          onChange={onContentChanged}\n        />\n        <button type=\"button\" onClick={onSaveMissionClicked} disabled={!canSave}>\n          Save Mission\n        </button>\n      </form>\n    </section>\n  )\n}\n","import React, { useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { useHistory } from 'react-router-dom'\nimport { missionUpdated } from './MissionSlice'\nlet RESPONSE ='cccc';\nexport const EditPostForm = ({ match }) => {\n  const { missionId } = match.params\n  const[mission1,SetMission] = useState({missionget:null});\n  const[change,SetChange] = useState(0);\n  const mission = useSelector((state) =>\n    state.missions.find((mission) => mission.id === missionId)\n  )\n  const getmission =async() =>{\n    try{\n      console.log(missionId);\n      const response = await fetch('http://localhost:4002/getspecificmission',{\n        method:'POST',\n        headers: {\n          'Content-Type': 'application/json'\n      },\n        body:JSON.stringify({id:missionId,auth:localStorage.getItem('authenticated')})\n      });\n      console.log(response.ok);\n      if(response.ok){\n        const jsonResponse = await response.json();\n        if(jsonResponse.msg==='no access' || jsonResponse.msg === 'didnt found'){\n          //do soemthing\n          RESPONSE = jsonResponse.msg;\n          console.log('fail');\n          SetChange(2);\n        } else{\n          console.log('success');\n          console.log(jsonResponse.result[0]);\n          RESPONSE = jsonResponse.result;\n          SetMission({missionget:jsonResponse.result[0]});\n          setTitle(jsonResponse.result[0].title);\n          setContent(jsonResponse.result[0].content);\n        }\n      }else{\n      throw new Error('request failed');\n    }\n    }catch(error){\n      console.log(error);\n    }\n  }\n  const updateMission =async() =>{\n    try{\n      console.log(title);\n      const response = await fetch('http://localhost:4002/updatemission',{\n        method:'POST',\n        headers: {\n          'Content-Type': 'application/json'\n      },\n        body:JSON.stringify({id:missionId,title:title,content:content})\n      });\n      console.log(response.ok);\n      if(response.ok){\n          console.log('success');\n        \n      }else{\n      throw new Error('request failed');\n    }\n    }catch(error){\n      console.log(error);\n    }\n  }\n  useEffect(()=>{\n    getmission();\n  },[])\n  \n  const [title, setTitle] = useState('')\n  const [content, setContent] = useState('')\n\n  const dispatch = useDispatch()\n  const history = useHistory()\n  console.log(mission1);\n  const onTitleChanged = (e) => setTitle(e.target.value)\n  const onContentChanged = (e) => setContent(e.target.value)\n\n  const onSavePostClicked = async () => {\n    if (title && content) {\n      await updateMission();\n      history.push(`/missions/${missionId}`)\n    }\n  }\n  console.log(RESPONSE);\n  if(localStorage.getItem('authenticated') === 'true'){\n  return (\n    <section>\n      <h2>Edit Post</h2>\n      <form>\n        <label htmlFor=\"postTitle\">Post Title:</label>\n        <input\n          type=\"text\"\n          id=\"postTitle\"\n          name=\"postTitle\"\n          placeholder=\"What's on your mind?\"\n          value={title}\n          onChange={onTitleChanged}\n        />\n        <label htmlFor=\"postContent\">Content:</label>\n        <textarea\n          id=\"postContent\"\n          name=\"postContent\"\n          value={content}\n          onChange={onContentChanged}\n        />\n      </form>\n      <button type=\"button\" onClick={onSavePostClicked}>\n        Save Mission\n      </button>\n    </section>\n  )\n  } else{\n    return(\n      <section>\n        <h1>No access</h1>\n      </section>\n    )\n  }\n}\n","import React, { useEffect } from 'react'\nimport { useState } from 'react'\nimport { useSelector,useDispatch } from 'react-redux'\nimport { Link } from 'react-router-dom'\nimport { addSubMission,deleteSubMission } from './MissionSlice'\nimport { createSlice, nanoid } from '@reduxjs/toolkit'\n\n\nimport { TimeAgo } from './TimeAgo'\nlet COUNT =0;\nexport const SinglePostPage = ({ match }) => {\n  const { missionId } = match.params\n  \n  const [submission,SetSubMission] = useState('');\n  const [submissions,SetSubMissions] = useState({submissionsarray:[],ids:[]});\n  const[mission1,SetMIssion] = useState({missionget:null});\n  const dispatch = useDispatch();\n  const [deletestatus, UpdateDelete] = useState(0);\n\n  \n  const getmission =async() =>{\n    try{\n      console.log(missionId);\n      const response = await fetch('http://localhost:4002/getspecificmission',{\n        method:'POST',\n        headers: {\n          'Content-Type': 'application/json'\n      },\n        body:JSON.stringify({id:missionId,auth:localStorage.getItem('authenticated')})\n      });\n      console.log(response.ok);\n      if(response.ok){\n        const jsonResponse = await response.json();\n        if(jsonResponse.msg==='didnt found'){\n          //do soemthing\n          console.log('fail');\n        } else{\n          console.log('success');\n          console.log(jsonResponse.result);\n          SetMIssion({missionget:jsonResponse.result});\n          console.log(mission1.missionget);\n        }\n      }else{\n      throw new Error('request failed');\n    }\n    }catch(error){\n      console.log(error);\n    }\n  }\n  const getsubmissions =async() =>{\n    try{\n      const response = await fetch('http://localhost:4002/getsubmissions',{\n        method:'POST',\n        headers: {\n          'Content-Type': 'application/json'\n      },\n        body:JSON.stringify({id:missionId})\n      });\n      console.log(response.ok);\n      if(response.ok){\n        const jsonResponse = await response.json();\n        console.log(jsonResponse.response);\n        SetSubMissions({submissionsarray:jsonResponse.response,ids:jsonResponse.id});\n      }else{\n      throw new Error('request failed');\n    }\n    }catch(error){\n      console.log(error);\n    }\n  }\n  const sendSubMission =async(itemid) =>{\n    try{\n      console.log(missionId);\n      const response = await fetch('http://localhost:4002/addsubmission',{\n        method:'POST',\n        headers: {\n          'Content-Type': 'application/json'\n      },\n        body:JSON.stringify({id:missionId,submission:submission,item:itemid})\n      });\n      console.log(response.ok);\n      if(response.ok){\n        const jsonResponse = await response.json();\n      }else{\n      throw new Error('request failed');\n    }\n    }catch(error){\n      console.log(error);\n    }\n  }\n  const deletesubmission = async (deleteid) =>{\n    console.log(deleteid);\n    console.log(submissions.submissionsarray);\n    try{\n      const response = await fetch('http://localhost:4002/deletesubmission',{\n        method:'POST',\n        headers: {\n          'Content-Type': 'application/json'\n      },\n        body:JSON.stringify({id:deleteid})\n      });\n      console.log(response.ok);\n      if(response.ok){\n        const jsonResponse = await response.json();\n        console.log(jsonResponse.msg);\n        if(jsonResponse.msg==='deleted'){\n          console.log('success');\n        } else{\n          console.log('failed');\n        }\n      }else{\n      throw new Error('request failed');\n    }\n    }catch(error){\n      console.log(error);\n    }\n  }\n  let renderSubMissions = [];\n  useEffect(()=>{\n    getmission();\n    getsubmissions();\n    console.log(mission1.missionget);\n  },[])\n  useEffect(()=>{\n    getsubmissions();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    renderSubMissions = submissions.submissionsarray.map((submis,i=0) =>{\n      return(\n        <article className=\"sublist\">\n        <h4 id={i}>{submis}</h4>\n        <button className=\"delsubutton\" id={submissions.ids[i]} onClick={deletesub}>Delete</button>\n        {i++}\n        </article>\n      ); \n      \n    })\n  },[deletestatus])\n  \n  const onSubMissionChanged = (e) => SetSubMission(e.target.value);\n  const addsubmission = async(event) =>{\n    console.log(submission);\n    if(event.which === 13){\n      console.log('check');\n      await sendSubMission(nanoid());\n      COUNT++;\n      await getsubmissions();\n      console.log('check');\n      console.log(submissions.submissionsarray)\n       renderSubMissions = submissions.submissionsarray.map((submis,i=0) =>{\n        return(\n          <article className=\"sublist\">\n          <h4 id={i}>{submis}</h4>\n          <button className=\"delsubutton\" id={submissions.ids[i]} onClick={deletesub}>Delete</button>\n          {i++}\n          </article>\n        ); \n        \n      })\n      SetSubMission('');\n    }\n  }\n  const deletesub = async(event) =>{\n    await deletesubmission(event.target.id);\n    COUNT++\n    UpdateDelete(COUNT);\n  }\n   renderSubMissions = submissions.submissionsarray.map((submis,i=0) =>{\n    return(\n      <article className=\"sublist\">\n      <h4 id={i}>{submis}</h4>\n      <br></br>\n      <button className=\"delsubutton\" id={submissions.ids[i]} onClick={deletesub}>Delete</button>\n      {i++}\n      </article>\n    ); \n    \n  })\n  console.log(mission1.missionget);\n  if (mission1.missionget === null || mission1.missionget === undefined) {\n    console.log('do');\n    return (\n      <section>\n        <h2>mission not found!</h2>\n      </section>\n    )\n  } else{\n    console.log(mission1.missionget);\n  return (\n    <section className=\"singlemission\">\n      <article className=\"post\">\n        <h2>{mission1.missionget[0].title}</h2>\n        <div>\n          <TimeAgo timestamp={mission1.missionget[0].date} />\n        </div>\n        <p className=\"post-content\">{mission1.missionget[0].content}</p>\n        <Link to={`/editMission/${mission1.missionget[0].id}`} className=\"button\">\n          Edit mission\n        </Link>\n      </article>\n      <article className=\"submissions\">\n      <label htmlFor=\"submission\">Add Submission</label>\n        <input\n          type=\"text\"\n          id=\"submission\"\n          name=\"submission\"\n          placeholder=\"\"\n          value={submission}\n          onChange={onSubMissionChanged}\n          onKeyPress={addsubmission}\n        />\n        {renderSubMissions}\n      </article>\n    </section>\n  )}\n}\n\n","/* eslint-disable react/react-in-jsx-scope */\nimport { useEffect, useState } from \"react\";\nimport React from 'react';\nimport { useHistory,Link } from 'react-router-dom';\nlet CryptoJS = require(\"crypto-js\");\nconst dotenv = require('dotenv');\n\n\nexport const Login=()=>{\n    const[username,SetUserName] = useState('');\n    const[password,SetPassword] = useState('');\n    const [show, setShow] = useState(false);\n    const history = useHistory();\n    const OnUserNameChange =(e) => SetUserName(e.target.value);\n    const OnPasswordChange =(e) => SetPassword(e.target.value);\n    const SendRequest = async() =>{\n      dotenv.config();\n      console.log(process.env.REACT_APP_KEY_ENCRYPT)\n        try{\n            const response = await fetch('http://localhost:4002/login',{\n              method:'POST',\n              headers: {\n                'Content-Type': 'application/json'\n            },\n              body:JSON.stringify({username:username,password:CryptoJS.AES.encrypt(password, process.env.REACT_APP_KEY_ENCRYPT).toString()})\n            });\n            if(response.ok){\n              const jsonResponse = await response.json();\n              console.log(jsonResponse.authenticated);\n              if(jsonResponse.authenticated){\n                console.log(jsonResponse.role);\n                  localStorage.setItem('username',username);\n                  localStorage.setItem('password',password);\n                  localStorage.setItem('role',jsonResponse.role);\n                  localStorage.setItem('authenticated','true');\n                  history.push('/missions');\n              } else{\n                setShow(true);\n              }\n            }else{\n            throw new Error('request failed');\n          }\n          }catch(error){\n            console.log(error);\n          }\n    }\n    const onLoadSend = async() =>{\n        if(username ==='' && password==='' || username ==='' || password===''){\n            SetUserName(localStorage.getItem('username'));\n            SetPassword(localStorage.getItem('password'));\n        }\n        console.log(localStorage.getItem('username'));\n        console.log(username);\n        console.log(localStorage.getItem('password'));\n        try{\n            const response = await fetch('http://localhost:4002/login',{\n              method:'POST',\n              headers: {\n                'Content-Type': 'application/json'\n            },\n              body:JSON.stringify({username:localStorage.getItem('username'),password:CryptoJS.AES.encrypt(localStorage.getItem('password'), process.env.REACT_APP_KEY_ENCRYPT).toString()})\n            });\n            if(response.ok){\n              const jsonResponse = await response.json();\n              console.log(jsonResponse.authenticated);\n              if(jsonResponse.authenticated){\n                  localStorage.setItem('authenticated',true);\n                  localStorage.setItem('role',jsonResponse.role);\n                  history.push('/missions');\n              } else{\n                setShow(true);\n              }\n            }else{\n            throw new Error('request failed');\n          }\n          }catch(error){\n            console.log(error);\n          }\n    }\n    useEffect(()=>{\n       if(localStorage.getItem('username') !== ''){\n        onLoadSend();\n       }\n        \n    },[])\n    return(\n        <section>\n        <h2>Login</h2>\n        <form>\n          <label htmlFor=\"username\">Username:</label>\n          <input\n            type=\"text\"\n            id=\"username\"\n            name=\"username\"\n            placeholder=\"\"\n            value={username}\n            onChange={OnUserNameChange}\n            required\n          />\n          <label htmlFor=\"password\">Password:</label>\n          <input\n            type=\"password\"\n            id=\"password\"\n            name=\"password\"\n            placeholder=\"\"\n            minLength=\"8\"\n            value={password}\n            onChange={OnPasswordChange}\n            required\n          />\n          <Link to='/register'>Register</Link>\n          <h6></h6>\n          <button type=\"button\" onClick={SendRequest}>\n            Login\n          </button>\n          {show?(<h4 style={{color:\"red\"}}>check your password and username again</h4>):null}\n        </form>\n      </section>\n  \n    );\n}","import { useEffect, useState } from \"react\";\nimport React from 'react';\nimport { useHistory,Link } from 'react-router-dom';\nlet CryptoJS = require(\"crypto-js\");\n\n\nexport const Register=()=>{\n    const[username,SetUserName] = useState('');\n    const[password,SetPassword] = useState('');\n    const [fail, Setfail] = useState(false);\n    const [success, setSuccess] = useState(false);\n    const history = useHistory();\n    const OnUserNameChange =(e) => SetUserName(e.target.value);\n    const OnPasswordChange =(e) => SetPassword(e.target.value);\n    const SendRequest = async() =>{\n        try{\n            const response = await fetch('http://localhost:4002/register',{\n              method:'POST',\n              headers: {\n                'Content-Type': 'application/json'\n            },\n              body:JSON.stringify({username:username,password:CryptoJS.AES.encrypt(password, process.env.REACT_APP_KEY_ENCRYPT).toString()})\n            });\n            console.log(response.ok);\n            if(response.ok){\n              const jsonResponse = await response.json();\n              console.log(jsonResponse.authenticated);\n              if(jsonResponse.msg ==='new user created'){\n                console.log(jsonResponse.role);\n                Setfail(false);\n                setSuccess(true);\n              } else{\n                Setfail(true);\n              }\n            }else{\n            throw new Error('request failed');\n          }\n          }catch(error){\n            console.log(error);\n          }\n    }\n    useEffect(()=>{    \n    },[])\n    return(\n        <section>\n        <h2>Register</h2>\n        <form>\n          <label htmlFor=\"username\">Username:</label>\n          <input\n            type=\"text\"\n            id=\"username\"\n            name=\"username\"\n            placeholder=\"\"\n            value={username}\n            onChange={OnUserNameChange}\n            required\n          />\n          <label htmlFor=\"password\">Password:</label>\n          <input\n            type=\"password\"\n            id=\"password\"\n            name=\"password\"\n            placeholder=\"\"\n            minLength=\"8\"\n            value={password}\n            onChange={OnPasswordChange}\n            required\n          />\n         <Link to='/'>Login</Link>\n         <h6></h6>\n          <button type=\"button\" onClick={SendRequest}>\n            Register\n          </button>\n          {fail?(<h4 style={{color:\"red\"}}>check your password and username again</h4>):null}\n          {success?(<h4 style={{color:\"green\"}}>user created</h4>):null}\n        </form>\n      </section>\n  \n    );\n}","import React from 'react'\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n} from 'react-router-dom'\n\nimport { Navbar } from './app/Navbar'\n\nimport { MissionsList } from './features/posts/MissionList'\nimport { AddMissionForm } from './features/posts/AddMissionForm'\nimport { EditPostForm } from './features/posts/EditMissionForm'\nimport { SinglePostPage } from './features/posts/SingleMissionPage'\nimport {Login} from './features/posts/Login';\nimport { Register } from './features/posts/Register';\n\n\nfunction App() {\n  return (\n    <Router>\n      <Navbar />\n      <div className=\"App\">\n        <Switch>\n        <Route\n            exact\n            path=\"/\"\n            component={Login}\n          />\n           <Route\n            exact\n            path=\"/register\"\n            component={Register}\n          />\n          <Route\n            exact\n            path=\"/missions\"\n            render={() => (\n              <React.Fragment>\n                <AddMissionForm />\n                <MissionsList />\n              </React.Fragment>\n            )}\n          />\n          <Route exact path=\"/missions/:missionId\" component={SinglePostPage} />\n          <Route exact path=\"/editMission/:missionId\" component={EditPostForm} />\n          <Redirect to=\"/\" />\n        </Switch>\n      </div>\n    </Router>\n  )\n}\n\nexport default App\n\n","import { createSlice } from '@reduxjs/toolkit'\n\nconst initialState = [\n \n]\n\nconst usersSlice = createSlice({\n  name: 'users',\n  initialState,\n  reducers: {},\n})\n\nexport default usersSlice.reducer\n","import { configureStore } from '@reduxjs/toolkit'\n\nimport missionsReducer from '../features/posts/MissionSlice'\nimport usersReducer from '../features/users/usersSlice'\nlet item =0;\n\nexport default configureStore({\n  reducer: {\n    missions: missionsReducer,\n    users: usersReducer,\n  },\n})\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport store from './app/store'\nimport { Provider } from 'react-redux'\n\nimport './api/server'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}